apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" .Values.name .Values.namespace}}
  labels:
    app: {{ printf "%s-%s" .Values.name .Values.namespace}}
    app.kubernetes.io/name: {{ printf "%s-%s" .Values.name .Values.namespace}}
    app.kubernetes.io/component: {{ printf "%s-%s" .Values.name .Values.namespace}}
spec:
  replicas: {{int .Values.replicas}}
  selector:
    matchLabels:
      app: {{ printf "%s-%s" .Values.name .Values.namespace}}
      app.kubernetes.io/name: {{ printf "%s-%s" .Values.name .Values.namespace}}
      app.kubernetes.io/component: {{ printf "%s-%s" .Values.name .Values.namespace}}
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s" .Values.name .Values.namespace}}
        app.kubernetes.io/name: {{ printf "%s-%s" .Values.name .Values.namespace}}
        app.kubernetes.io/component: {{ printf "%s-%s" .Values.name .Values.namespace}}
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
      - name: {{ printf "%s-%s" .Values.name .Values.namespace}}
        image: {{.Values.image}}
        args:
          - --bind_ip
          - 0.0.0.0
        resources:
          requests:
            cpu: {{.Values.cpu}}
            memory: {{.Values.memory}}
        ports:
        - containerPort: {{.Values.servicePort}}
          name: http-{{.Values.name}}
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: {{.Values.servicePort}}
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: {{.Values.servicePort}}
          timeoutSeconds: 1
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: {{.Values.name}}-pv
      volumes:
        - name: {{.Values.name}}-pv
          persistentVolumeClaim:
            claimName: {{.Values.name}}-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi